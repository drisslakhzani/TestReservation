{"ast":null,"code":"var _jsxFileName = \"/home/drisslkz/Desktop/Work/Clone/ReservationSystem-firebase-reactRouter-/src/backend/dashboard/Auth.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { getAuth } from 'firebase/auth';\n// Import your Firebase authentication setup\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport function useAuth() {\n  _s();\n  return useContext(AuthContext);\n}\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport function AuthProvider({\n  children\n}) {\n  _s2();\n  const [currentUser, setCurrentUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  // Initialize authentication and set up an observer for user changes\n  useEffect(() => {\n    const unsubscribe = getAuth().onAuthStateChanged(user => {\n      setCurrentUser(user);\n      setLoading(false);\n    });\n    return unsubscribe;\n  }, []);\n  const value = {\n    currentUser\n    // Add other authentication-related functions (signIn, signOut, etc.) here\n  };\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: !loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 10\n  }, this);\n}\n\n// import React, { useEffect, useState } from \"react\";\n// import app from \"../fireConfig\";\n\n// export const AuthContext = React.createContext();\n\n// export const AuthProvider = ({ children }) => {\n//   const [currentUser, setCurrentUser] = useState(null);\n//   const [pending, setPending] = useState(true);\n\n//   useEffect(() => {\n//     app.auth().onAuthStateChanged((user) => {\n//       setCurrentUser(user)\n//       setPending(false)\n//     });\n//   }, []);\n\n//   if(pending){\n//     return <>Loading...</>\n//   }\n\n//   return (\n//     <AuthContext.Provider\n//       value={{\n//         currentUser\n//       }}\n//     >\n//       {children}\n//     </AuthContext.Provider>\n//   );\n// };\n_s2(AuthProvider, \"+Bt7EujFHjK6mRV3YX1iAtSqXvQ=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","getAuth","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","currentUser","setCurrentUser","loading","setLoading","unsubscribe","onAuthStateChanged","user","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/drisslkz/Desktop/Work/Clone/ReservationSystem-firebase-reactRouter-/src/backend/dashboard/Auth.jsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport { getAuth } from 'firebase/auth';\n// Import your Firebase authentication setup\n\nconst AuthContext = createContext();\n\nexport function useAuth() {\n  return useContext(AuthContext);\n}\n\nexport function AuthProvider({ children }) {\n  const [currentUser, setCurrentUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  // Initialize authentication and set up an observer for user changes\n  useEffect(() => {\n    const unsubscribe = getAuth().onAuthStateChanged((user) => {\n      setCurrentUser(user);\n      setLoading(false);\n    });\n\n    return unsubscribe;\n  }, []);\n\n  const value = {\n    currentUser,\n    // Add other authentication-related functions (signIn, signOut, etc.) here\n  };\n\n  return <AuthContext.Provider value={value}>{!loading && children}</AuthContext.Provider>;\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import React, { useEffect, useState } from \"react\";\n// import app from \"../fireConfig\";\n\n// export const AuthContext = React.createContext();\n\n// export const AuthProvider = ({ children }) => {\n//   const [currentUser, setCurrentUser] = useState(null);\n//   const [pending, setPending] = useState(true);\n\n//   useEffect(() => {\n//     app.auth().onAuthStateChanged((user) => {\n//       setCurrentUser(user)\n//       setPending(false)\n//     });\n//   }, []);\n\n//   if(pending){\n//     return <>Loading...</>\n//   }\n\n//   return (\n//     <AuthContext.Provider\n//       value={{\n//         currentUser\n//       }}\n//     >\n//       {children}\n//     </AuthContext.Provider>\n//   );\n// };"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC7E,SAASC,OAAO,QAAQ,eAAe;AACvC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,WAAW,gBAAGP,aAAa,CAAC,CAAC;AAEnC,OAAO,SAASQ,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACxB,OAAOR,UAAU,CAACM,WAAW,CAAC;AAChC;AAACE,EAAA,CAFeD,OAAO;AAIvB,OAAO,SAASE,YAAYA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,GAAA;EACzC,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACa,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;;EAE5C;EACAC,SAAS,CAAC,MAAM;IACd,MAAMc,WAAW,GAAGb,OAAO,CAAC,CAAC,CAACc,kBAAkB,CAAEC,IAAI,IAAK;MACzDL,cAAc,CAACK,IAAI,CAAC;MACpBH,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC;IAEF,OAAOC,WAAW;EACpB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,KAAK,GAAG;IACZP;IACA;EACF,CAAC;;EAED,oBAAOP,OAAA,CAACC,WAAW,CAACc,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAT,QAAA,EAAE,CAACI,OAAO,IAAIJ;EAAQ;IAAAW,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAuB,CAAC;AAC1F;;AAiBA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAAb,GAAA,CAlEgBF,YAAY;AAAAgB,EAAA,GAAZhB,YAAY;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}